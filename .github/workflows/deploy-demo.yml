name: Deploy Demo to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Install Dioxus CLI (fast method)
        uses: taiki-e/install-action@v2
        with:
          tool: dioxus-cli@0.6.3
      
      - name: Install npm dependencies
        run: npm install
      
      - name: Install Tailwind CSS
        run: |
          # Download Tailwind CSS standalone CLI v4
          curl -sLO https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-linux-x64
          chmod +x tailwindcss-linux-x64
          mv tailwindcss-linux-x64 tailwindcss
      
      - name: Build optimized WASM
        env:
          DX_BASE_PATH: leaflet-webgl-hybrid-poc
        run: |
          # Build with Dioxus CLI (handles Tailwind CSS via pre_build hook)
          # DX_BASE_PATH環境変数でGitHub Pages用のbase pathを設定
          dx build --platform web --release
          
          # Move built files to dist directory for GitHub Pages
          mkdir -p dist
          cp -r target/dx/leaflet-webgl-hybrid-poc/release/web/public/* dist/
      
      # Dioxus CLI already handles base_path, so no path fixing needed
      
      - name: Create 404.html for SPA routing
        run: cp dist/index.html dist/404.html
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          enablement: true  # GitHub Pagesを自動的に有効化
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4