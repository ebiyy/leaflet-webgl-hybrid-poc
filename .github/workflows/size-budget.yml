name: WASM Size Budget Check

on:
  push:
    branches: [main]
    paths:
      - 'src/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
  workflow_dispatch:

jobs:
  size-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown
      
      - name: Install Dioxus CLI
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-dioxus-cli
      
      - name: Cache
        uses: Swatinem/rust-cache@v2
      
      - name: Build WASM (current)
        run: |
          dx build --platform web --release
          
          # Find the optimized WASM file
          CURRENT_WASM=$(find target/dx -name "*.wasm" -type f | head -1)
          CURRENT_SIZE=$(stat -c%s "$CURRENT_WASM" || stat -f%z "$CURRENT_WASM")
          echo "CURRENT_WASM_SIZE=$CURRENT_SIZE" >> $GITHUB_ENV
          echo "Current WASM size: $((CURRENT_SIZE / 1024)) KB"
      
      - name: Checkout previous commit
        run: |
          git checkout HEAD~1
      
      - name: Build WASM (previous)
        run: |
          dx build --platform web --release
          
          # Find the optimized WASM file
          PREV_WASM=$(find target/dx -name "*.wasm" -type f | head -1)
          PREV_SIZE=$(stat -c%s "$PREV_WASM" || stat -f%z "$PREV_WASM")
          echo "PREV_WASM_SIZE=$PREV_SIZE" >> $GITHUB_ENV
          echo "Previous WASM size: $((PREV_SIZE / 1024)) KB"
      
      - name: Check size budget
        run: |
          CURRENT_SIZE=${{ env.CURRENT_WASM_SIZE }}
          PREV_SIZE=${{ env.PREV_WASM_SIZE }}
          BUDGET_LIMIT=655360  # 640KB in bytes (Dioxus最適化後の現実的な値)
          
          echo "## 📊 WASM Size Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Commit | Size | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Previous | $((PREV_SIZE / 1024)) KB | baseline |" >> $GITHUB_STEP_SUMMARY
          echo "| Current | $((CURRENT_SIZE / 1024)) KB | $([ $CURRENT_SIZE -le $BUDGET_LIMIT ] && echo '✅ OK' || echo '❌ Over budget') |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          DIFF=$((CURRENT_SIZE - PREV_SIZE))
          if [ $PREV_SIZE -ne 0 ]; then
            DIFF_PERCENT=$(( (DIFF * 100) / PREV_SIZE ))
          else
            DIFF_PERCENT=0
          fi
          
          if [ $DIFF -gt 0 ]; then
            echo "**Size increased by $((DIFF / 1024)) KB (+${DIFF_PERCENT}%)**" >> $GITHUB_STEP_SUMMARY
          elif [ $DIFF -lt 0 ]; then
            echo "**Size decreased by $((-DIFF / 1024)) KB (${DIFF_PERCENT}%)**" >> $GITHUB_STEP_SUMMARY
          else
            echo "**Size unchanged**" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🎯 Size Budget: 640 KB" >> $GITHUB_STEP_SUMMARY
          
          if [ $CURRENT_SIZE -gt $BUDGET_LIMIT ]; then
            echo "❌ **Commit exceeds size budget!**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Please optimize your code to stay under 640 KB." >> $GITHUB_STEP_SUMMARY
            echo "Tips:" >> $GITHUB_STEP_SUMMARY
            echo "- Remove unused dependencies" >> $GITHUB_STEP_SUMMARY
            echo "- Use \`--no-default-features\` where possible" >> $GITHUB_STEP_SUMMARY
            echo "- Consider code splitting" >> $GITHUB_STEP_SUMMARY
            exit 1
          else
            echo "✅ **Commit is within size budget**" >> $GITHUB_STEP_SUMMARY
          fi
      
